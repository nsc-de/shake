name: Java CI with Gradle

on: [ push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [16]

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Cache ‚ôªÔ∏è
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build

      - if: success() || failure()
        name: Generate Test Reports
        run: ./gradlew genReport

#      - name: Test Report
#        uses: dorny/test-reporter@v1
#        if: success() || failure()
#        with:
#          name: Test Report
#          path: build/test-results/**/*.xml
#          reporter: java-junit

      - name: Upload Test Report
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: Test Report
          path: build/reports/tests

