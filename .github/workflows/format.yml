name: Format using ktlint

# Run workflow each time code is pushed to your repository and on a schedule.
# The scheduled workflow runs every Thursday at 15:45 UTC.
on:
  push:
    branches:
      - development
  schedule:
    - cron: "45 15 * * 4"

permissions:
  contents: write
  pull-requests: write

jobs:
  lint:
    name: Format using ktlint
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [16]

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Format with KtLint
        run: |
          ./gradlew ktlintFormat

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.ACTIONS_GPG_KEY }}
          passphrase: ${{ secrets.ACTIONS_GPG_PASS }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Commit changes
        run: |
          git config --local user.email "bot@shakelang.com"
          git config --local user.name "shakebot[bot]"
          git add .
          git commit -m "[Automated] Format using ktlint"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if PR exists
        id: check_pr
        run: |
          pr_count=$(gh pr list --state open --base development --json number | jq length)
          echo "::set-output name=pr_count::$pr_count"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create or update PR
        run: |
          if [[ "${{ steps.check_pr.outputs.pr_count }}" -gt 0 ]]; then
            # Force push if PR exists
            git push --force origin "${{ github.ref }}"
          else
            # Create new PR with the old code
            gh pr create --base development --head "${{ github.sha }}" --title "[Automated] Format using ktlint" --body "This is an automated pull request to format the code using ktlint."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
